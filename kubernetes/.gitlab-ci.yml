stages:
  - deploy

deploy:
  stage: deploy
  environment:
    name: sausage-store
    url: https://tyutyunov-igor-025.k8s.praktikum-services.tech
  rules:
    - when: manual
  before_script:
    - command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )
    - eval $(ssh-agent -s)
    - chmod 400 "$SSH_PRIVATE_KEY"
    - ssh-add "$SSH_PRIVATE_KEY"
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $ENV_HOST > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - command -v envsubst >/dev/null || ( apt-get update -y && apt-get install gettext-base -y )
    - scp $KUBE_CONFIG $ENV_USER@$ENV_HOST:~/.kube/config
    - envsubst < ./kubernetes/backend/deployment.yaml > ./kubernetes/backend/deployment.yaml
    - envsubst < ./kubernetes/backend-report/deployment.yaml > ./kubernetes/backend-report/deployment.yaml
    - scp -rC ./kubernetes $ENV_USER@$ENV_HOST:~/kubernetes
    - ssh $ENV_USER@$ENV_HOST kubectl delete secret docker-config-secret --ignore-not-found=true
    - ssh $ENV_USER@$ENV_HOST kubectl create secret docker-registry docker-config-secret --docker-server=${CI_REGISTRY} --docker-username=std-025-75 --docker-password=7q2g4NSw
  script:
    - ssh $ENV_USER@$ENV_HOST kubectl apply -f /home/$ENV_USER/kubernetes/backend
    - ssh $ENV_USER@$ENV_HOST kubectl apply -f /home/$ENV_USER/kubernetes/backend-report
    - ssh $ENV_USER@$ENV_HOST kubectl apply -f /home/$ENV_USER/kubernetes/frontend

